options:
  env:
    -
substitutions:
  _ORG: Cyclingwithelephants

steps:
  - name: terraform:0.12
    id: first
    bash: echo hello
  - name: hashicorp/terraform
    bash: |
          function tf_setup_workspace() {
              token=$(cat ~/.terraform.d/credentials.tfrc.json | jq --raw-output '.credentials."app.terraform.io".token')
              prefix=$(cat terraform.tf | hclq get --raw 'terraform.backend.remote.workspaces.prefix')
              ws="${prefix}${env}"

              # gets workspace if it exists, creates it if it doesn't already
              terraform workspace select ${env} || terraform workspace new ${env}

              # turns off the remote-excute function on terraform when we create a new workspace
              curl -s --request PATCH \
                   --header "Authorization: Bearer $token" \
                   --header "Content-Type: application/vnd.api+json" \
                   --data '{"data":{"attributes":{"operations":false}}}' \
                   --url https://app.terraform.io/api/v2/organizations/${_ORG}/workspaces/"${ws}" 1>/dev/null # It will silently pass but notify of failure
          }

          ############## Config
          # BRANCH_NAME is a cloudbuild built-in variable
          if [[ ${BRANCH_NAME} ]]; then
            if [[ ${BRANCH_NAME} == "master" ]]; then
              env='-prod'
            else
              # _PR_NUMBER is a github cloudbuild built-in
              env="-PR-${_PR_NUMBER}"
          else # is being executed locally
            branch_name=$(git symbolic-ref --short HEAD)
            if [[ ${branch_name} == "master" ]]; then
              env='-prod'
            else
              env="-PR-${_PR_NUMBER}"
            fi
          fi

          ############## Do things
          terraform validate

          tf_setup_workspace

          terraform plan \
            -out=./tfplan \
            -var-file=config/terraform.tfvars \
            -var-file=config/secrets.tfvars

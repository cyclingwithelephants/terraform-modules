{
  "version": 4,
  "terraform_version": "0.12.24",
  "serial": 3,
  "lineage": "72577a68-15da-1130-d9cf-a1c839603a36",
  "outputs": {
    "pr": {
      "value": {
        "options": {
          "env": [
            null
          ],
          "substitutions": {
            "_ORG": "Cyclingwithelephants"
          }
        },
        "steps": [
          {
            "bash": "function tf_setup_workspace() {\n    token=$(cat ~/.terraform.d/credentials.tfrc.json | jq --raw-output '.credentials.\"app.terraform.io\".token')\n    prefix=$(cat terraform.tf | hclq get --raw 'terraform.backend.remote.workspaces.prefix')\n    ws=\"${prefix}${env}\"\n\n    # gets workspace if it exists, creates it if it doesn't already\n    terraform workspace select ${env} || terraform workspace new ${env}\n\n    # turns off the remote-excute function on terraform when we create a new workspace\n    curl -s --request PATCH \\\n         --header \"Authorization: Bearer $token\" \\\n         --header \"Content-Type: application/vnd.api+json\" \\\n         --data '{\"data\":{\"attributes\":{\"operations\":false}}}' \\\n         --url https://app.terraform.io/api/v2/organizations/${_ORG}/workspaces/\"${ws}\" 1\u003e/dev/null # It will silently pass but notify of failure\n}\n\n############## Config\n# BRANCH_NAME is a cloudbuild built-in variable\nif [[ ${BRANCH_NAME} ]]; then\n  if [[ ${BRANCH_NAME} == \"master\" ]]; then\n    env='-prod'\n  else\n    # _PR_NUMBER is a github cloudbuild built-in\n    env=\"-PR-${_PR_NUMBER}\"\nelse # is being executed locally\n  branch_name=$(git symbolic-ref --short HEAD)\n  if [[ ${branch_name} == \"master\" ]]; then\n    env='-prod'\n  else\n    env=\"-PR-${_PR_NUMBER}\"\n  fi\nfi\n\n############## Do things\nterraform validate\n\ntf_setup_workspace\n\nterraform plan \\\n  -out=./tfplan \\\n  -var-file=config/terraform.tfvars \\\n  -var-file=config/secrets.tfvars\n",
            "name": "eu.gcr.io/$project_id/terraform"
          }
        ]
      },
      "type": [
        "object",
        {
          "options": [
            "object",
            {
              "env": [
                "tuple",
                [
                  "dynamic"
                ]
              ],
              "substitutions": [
                "object",
                {
                  "_ORG": "string"
                }
              ]
            }
          ],
          "steps": [
            "tuple",
            [
              [
                "object",
                {
                  "bash": "string",
                  "name": "string"
                }
              ]
            ]
          ]
        }
      ]
    }
  },
  "resources": []
}
